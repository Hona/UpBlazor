@if (Incomes == null)
{
    <RepositoryWrapper TRepository="IIncomeRepository"
                       Action="x => x.GetAllByUserIdAsync(UserId)"
                       TResponse="IReadOnlyList<Core.Models.Income>"
                       Context="incomes">
    @{
        Incomes = incomes;
    }
    </RepositoryWrapper>
}

<Select @bind-Value="SelectedIncome"
        DataSource="Incomes"
        Placeholder="Select an income..."
        OnSelectedItemChanged="SelectedIncomeChangedInternal">
</Select>

@code
{
    [CascadingParameter(Name = "UserId")]
    public string UserId { get; set; }
    
    [CascadingParameter(Name = "RepoContext")]
    public IReadOnlyList<Income> Incomes { get; set; }
    
    [Parameter]
    public Income SelectedIncome { get; set; }
    
    [Parameter]
    public EventCallback<Income> SelectedIncomeChanged { get; set; }

    private void SelectedIncomeChangedInternal(Income selectedItem)
    {
        SelectedIncome = selectedItem;

        SelectedIncomeChanged.InvokeAsync(SelectedIncome);
    }
}