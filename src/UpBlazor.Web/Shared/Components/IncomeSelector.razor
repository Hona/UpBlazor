@using UpBlazor.Application.Features.Incomes
@inject IMediator _mediator

@if (_loading)
{
    <Spin />
}
else
{
    <Select DataSource="_incomes"
            @bind-Value="@SelectedIncome"
            Placeholder="Select an income..."
            @ref="@_selectRef">
    </Select>
}

@code
{
    [Parameter]
    public Income SelectedIncome
    {
        get => _selectedIncome;
        set
        {
            _selectedIncome = value;
            InvokeAsync(async () => await SelectedIncomeChanged.InvokeAsync(_selectedIncome));
        }
    }

    [Parameter]
    public EventCallback<Income> SelectedIncomeChanged { get; set; }

    [Parameter]
    public bool SelectFirst { get; set; } = true;

    private Select<Income, Income> _selectRef;

    private IReadOnlyList<Income> _incomes;

    private bool _loading;
    private Income _selectedIncome;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        _incomes = await _mediator.Send(new GetIncomesQuery());
        SelectedIncome = _incomes.FirstOrDefault();
        
        _loading = false;
    }

    private async Task SelectedIncomeChangedInternal(Income income)
    {
        SelectedIncome = income;

        await SelectedIncomeChanged.InvokeAsync();
    }
}