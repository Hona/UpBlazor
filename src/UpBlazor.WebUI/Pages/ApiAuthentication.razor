@page "/authentication/logged-in/{UserName}/{ExpiresDate}/{ReturnUri}/{ClaimsRaw}"

@layout EmptyLayout

@using Blazored.LocalStorage

@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager

@code
{
    [Parameter]
    public string ExpiresDate { get; set; }
    
    [Parameter]
    public string UserName { get; set; }
    
    [Parameter]
    public string ReturnUri { get; set; }
    
    [Parameter]
    public string ClaimsRaw { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine($"OnParametersSetAsync: {ExpiresDate} {UserName} {ReturnUri}");
        
        var parsedExpiresDate = DateTime.Parse(ExpiresDate);
        if (parsedExpiresDate <= DateTime.Now)
        {
            await LocalStorageService.RemoveItemAsync(LocalStorageKeys.LoggedIn);
            await LocalStorageService.RemoveItemAsync(LocalStorageKeys.UserName);
            await LocalStorageService.RemoveItemAsync(LocalStorageKeys.Claims);
        }
        else
        {
            await LocalStorageService.SetItemAsync(LocalStorageKeys.LoggedIn, ExpiresDate);
            await LocalStorageService.SetItemAsync(LocalStorageKeys.UserName, UserName);
            await LocalStorageService.SetItemAsync(LocalStorageKeys.Claims, ClaimsRaw.Split(','));
        }
        
        NavigationManager.NavigateTo(ReturnUri);
    }
}
