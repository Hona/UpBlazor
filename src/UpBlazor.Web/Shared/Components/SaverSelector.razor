@using UpBlazor.Application.Features.Up
@inject IMediator _mediator

<Select DataSource="_accounts" TItem="AccountResource" TItemValue="AccountResource"
        LabelName="@($"{nameof(AccountResource.Attributes)}.{nameof(AccountResource.Attributes.DisplayName)}")"
        @bind-Value="SelectedSaver"
        OnSelectedItemChanged="SelectedSaverChangedInternal"
        Placeholder="Select a saver..."
        Loading="_loading"/>

@code
{
    
    [Parameter]
    public EventCallback<AccountResource> SelectedSaverChanged { get; set; }
    
    [Parameter]
    public AccountResource SelectedSaver { get; set; }

    private IReadOnlyList<AccountResource> _accounts;

    private bool _loading;
    
    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        _accounts = await _mediator.Send(new GetUpAccountsQuery());

        _loading = false;
    }

    private void SelectedSaverChangedInternal(AccountResource selectedItem)
    {
        SelectedSaver = selectedItem;

        SelectedSaverChanged.InvokeAsync(SelectedSaver);
    }
}
