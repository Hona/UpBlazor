@using UpBlazor.Application.Features.TwoUp
@inject IMediator _mediator

<Title Level="3">2Up Players</Title>
<Table DataSource="_twoUpConnections" Loading="_loading" Context="tableContext">
    <Column Title="Given Name" @bind-Field="@tableContext.GivenName" Sortable/>
    <Column @bind-Field="@tableContext.Email" Sortable/>
    <ActionColumn>
        <Space>
            <SpaceItem>
                <Button Danger OnClick="async () => await DeleteAsync(tableContext.Id)">Remove</Button>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>

@code
{
    private bool _loading;

    private IReadOnlyList<RegisteredUser> _twoUpConnections;

    protected override async Task OnInitializedAsync() => await ReloadAsync();

    private async Task ReloadAsync()
    {
        _loading = true;

        _twoUpConnections = await _mediator.Send(new GetAllTwoUpConnectionsForCurrentUserQuery());
        
        _loading = false;
    }

    private async Task DeleteAsync(string userId)
    {
        _loading = true;

        await _mediator.Send(new RemoveTwoUpConnectionCommand(userId));

        await ReloadAsync();

        _loading = false;
    }
}
