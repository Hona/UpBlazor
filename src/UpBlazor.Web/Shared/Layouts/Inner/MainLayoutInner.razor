@using System.Security.Claims
@using UpBlazor.Application.Exceptions
@inject NavigationManager _navigationManager

<Layout Style="min-height: 100vh; max-width: 100vw;">
    <Sider Theme="SiderTheme.Dark"
           Collapsible 
           Collapsed="_siderCollapsed" OnCollapse="collapsed => _siderCollapsed = collapsed" 
           Breakpoint="BreakpointType.Md" 
           OnBreakpoint="collapsed => _siderCollapsed = collapsed"
    >
        <a target="_blank" @onclick='() => _navigationManager.NavigateTo("/")' style="display: flex; justify-content: center; align-items: flex-end; padding: 0 0.75rem">
            <Image Preview="false" Src="/img/up-logo-light-transparent-bg.svg"/>
            @if (!_siderCollapsed)
            {
                <Title Level="2" Style="padding-left: 0.75rem; color: #fff">Blazor</Title>
            }
        </a>
        <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Inline">
            <SubMenu>
                <TitleTemplate>
                    <Icon Type="dollar" Theme="outline"/>
                    <span>Budget</span>
                </TitleTemplate>
                <ChildContent>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/income")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/income">
                        <span>Income</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/expenses")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/expenses">
                        <span>Expenses</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/savings-plan")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/savings-plan">
                        <span>Savings Plan</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/goals")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/goals">
                        <span>Goals</span>
                    </MenuItem>
                </ChildContent>
            </SubMenu>
            <SubMenu>
                <TitleTemplate>
                    <Icon Type="fund" Theme="outline"/>
                    <span>Insights</span>
                </TitleTemplate>
                <ChildContent>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/insights/analytics")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/insights/analytics">
                        <span>Analytics</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/insights/planner")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/insights/planner">
                        <span>Planner</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/insights/forecast")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/insights/forecast">
                        <span>Forecast</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/insights/transactions")'
                              RouterMatch="NavLinkMatch.Prefix" RouterLink="/insights/transactions">
                        <span>Transactions</span>
                    </MenuItem>
                </ChildContent>
            </SubMenu>
            <SubMenu>
                <TitleTemplate>
                    <Icon Type="setting" Theme="outline"/>
                    <span>Settings</span>
                </TitleTemplate>
                <ChildContent>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/settings/up-access-token")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/settings/up-access-token">
                        <span>Access Token</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/settings/two-up")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/settings/two-up">
                        <span>2Up</span>
                    </MenuItem>
                </ChildContent>
            </SubMenu>
            <RequireAdmin>
                <SubMenu>
                    <TitleTemplate>
                        <Icon Type="warning" Theme="outline"/>
                        <span>Admin</span>
                    </TitleTemplate>
                    <ChildContent>
                        <MenuItem OnClick='() => _navigationManager.NavigateTo("/admin/users")'
                                  RouterMatch="NavLinkMatch.All" RouterLink="/admin/users">
                            <span>Users</span>
                        </MenuItem>
                        <MenuItem OnClick='() => _navigationManager.NavigateTo("/admin/notifications")'
                                  RouterMatch="NavLinkMatch.All" RouterLink="/admin/notifications">
                            <span>Notifications</span>
                        </MenuItem>
                    </ChildContent>
                </SubMenu>            
                </RequireAdmin>
        </Menu>
    </Sider>
    <Layout>
        <Header Style="background: #fff">
            <div style="width: 100%; height: 100%; display: flex; justify-content: flex-end; align-items: center">
                <UserDropdown />
            </div>
        </Header>
        <Content Style="padding: 24px; margin: 0; min-height: 280px;">
            <ErrorBoundary @ref="_errorBoundary">
                <ChildContent>
                    @ChildContent
                </ChildContent>
                <ErrorContent>
                    @if (context is UpApiAccessTokenNotSetException)
                    {
                        <Result Status="error" Title="No Access Token" SubTitle="You have not set your Up API access token, please add it in the settings">
                            <Extra>
                                <Button Type="primary"><a href="/settings/up-access-token" style="color: #fff">Settings</a></Button>
                            </Extra>
                        </Result>
                    }
                    else
                    {
                        <Result Status="500">
                            Unhandle exception occurred: @context.Message

                            <Divider/>

                            <Text Code>
                                @context.ToString()
                            </Text>
                        </Result>
                    }
                </ErrorContent>
            </ErrorBoundary>
        </Content>
        <Footer>
            <UpFooter/>
        </Footer>
        <BackTop />
    </Layout>
</Layout>

@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private bool _siderCollapsed;
    private ErrorBoundary _errorBoundary;
    
    protected override void OnParametersSet()
    {
        _errorBoundary?.Recover();
    }
}
