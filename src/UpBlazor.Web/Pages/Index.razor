@page "/"
@using Up.NET.Api.Accounts
@using Up.NET.Models
@using UpBlazor.Core.Services
@using Up.NET.Api

@inject ICurrentUserService _currentUserService

@if (_loadingApi)
{
    <Spin />
}
else if (_upApi == null)
{
    <Result Status="error" Title="No Access Token" SubTitle="You have not set your Up API access token, please add it in the settings"></Result>
}
else if (_accounts == null)
{
    <Spin />
}
else if (!_accounts.Success)
{
    <Result Status="error" Title="API Error"></Result>
}
else if (!_accounts.Response.Data.Any())
{
    <span>No data</span>
}
else
{
    <div style="display: flex; justify-content: center; align-items: center">
        @foreach (var transactionAccount in _accounts.Response.Data.Where(x => x.Attributes.AccountType == AccountType.Transactional))
        {
            <Card Title="@transactionAccount.Attributes.DisplayName"
                  Bordered="@true"
                  Hoverable="@true"
                  Style="margin: 1rem">
                @transactionAccount.Attributes.CreatedAt
                $@transactionAccount.Attributes.Balance.Value
            </Card>
        }
    </div>
    
    
    <Table TItem="AccountResource" DataSource="_accounts.Response.Data.Where(x => x.Attributes.AccountType == AccountType.Saver)">
        <Column Title="Account" DataIndex="Attributes.DisplayName" TData="string" Sortable></Column>
        <Column DataIndex="Attributes.CreatedAt" TData="DateTime" Format="dd/MM/yyyy"></Column>
        <Column DataIndex="Attributes.Balance.Value" TData="string" Sortable>
            <span>$@context.Attributes.Balance.Value</span>
        </Column>
    </Table>
}

@code
{
    private UpResponse<PaginatedDataResponse<AccountResource>> _accounts = null;
    private UpApi _upApi;
    private bool _loadingApi;

    protected override async Task OnInitializedAsync()
    {
        _loadingApi = true;
        _upApi = await _currentUserService.GetApiAsync();
        _loadingApi = false;
        
        if (_upApi == null)
        {
            // TODO: Make this check better
            return;
        }
        
        _accounts = await _upApi.GetAccountsAsync();
    }
}
