@using UpBlazor.Core.Models.Enums

@inject ISavingsPlanRepository _savingsPlanRepository

<Card Title="New Savings Plan">
    <Form Model="_request"
          LabelColSpan="4"
          WrapperColSpan="20"
          OnFinish="async () => await OnFormFinishAsync(UserId)"
          Loading="_loading"
          Context="formContext">
        <FormItem Label="Name">
            <Input DebounceMilliseconds="int.MaxValue" @bind-Value="@formContext.Name"/>
        </FormItem>
        <FormItem Label="Amount">
            <InputGroup>
                <MoneyInput @bind-Amount="@formContext.Amount"/>
            </InputGroup>
        </FormItem>
        <FormItem Label="Saver">
            <SaverSelector SelectedSaverChanged="x => _request.SaverId = x.Id"/>
        </FormItem>
        <FormItem WrapperColOffset="4" WrapperColSpan="20">
            <Button Type="primary" HtmlType="submit">
                Submit
            </Button>
        </FormItem>
    </Form>
</Card>

@code
{
    [CascadingParameter(Name = CascadingConstants.UserIdWrapper)]
    public string UserId { get; set; }

    [Parameter]
    public Income Income { get; set; }
    
    [Parameter]
    public Func<Task> OnNewSavingsPlanAsync { get; set; }
    
    private SavingsPlanRequest _request = new();

    private bool _loading;
    
    private async Task OnFormFinishAsync(string currentUserId)
    {
        _loading = true;
        
        if (_request.Amount.Percent.HasValue)
        {
            _request.Amount.Percent /= 100;
        }

        await _savingsPlanRepository.AddAsync(new SavingsPlan
        {
            Name = _request.Name,
            IncomeId = Income.Id,
            SaverId = _request.SaverId,
            Amount = _request.Amount
        });
        
        _request = new();
        _loading = false;

        if (OnNewSavingsPlanAsync != null)
        {
            await OnNewSavingsPlanAsync.Invoke();
        }
    }

    private class SavingsPlanRequest
    {
        [Required]
        public string Name { get; set; }

        [Required]
        public Money Amount { get; set; } = new();
        
        [Required]
        public string SaverId { get; set; }
    }
}
