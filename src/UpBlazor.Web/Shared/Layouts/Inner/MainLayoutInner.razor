@using System.Security.Claims
@inject NavigationManager _navigationManager

<Layout Style="min-height: 100vh; width: 100vw; max-width: 100vw;">
    <Sider Theme="SiderTheme.Dark"
           Collapsible Collapsed="_siderCollapsed" OnCollapse="collapsed => _siderCollapsed = collapsed" Breakpoint="BreakpointType.Md" OnBreakpoint="collapsed => _siderCollapsed = collapsed">
        <a target="_blank" @onclick='() => _navigationManager.NavigateTo("/")' style="display: flex; justify-content: center; align-items: flex-end; padding: 0 0.75rem">
            <Image Preview="false" Src="/img/up-logo-light-transparent-bg.svg"/>
            @if (!_siderCollapsed)
            {
                <Title Level="2" Style="padding-left: 0.75rem; color: #fff">Blazor</Title>
            }
        </a>
        <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Inline">
            <SubMenu>
                <TitleTemplate>
                    <Icon Type="dollar" Theme="outline"/>
                    <span>Budget</span>
                </TitleTemplate>
                <ChildContent>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/expenses")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/expenses">
                        <span>Expenses</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/income")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/income">
                        <span>Income</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/budget/planner")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/budget/planner">
                        <span>Planner</span>
                    </MenuItem>
                </ChildContent>
            </SubMenu>
            <SubMenu >
                <TitleTemplate>
                    <Icon Type="setting" Theme="outline"/>
                    <span>Settings</span>
                </TitleTemplate>
                <ChildContent>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/settings/up-access-token")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/settings/up-access-token">
                        <span>Access Token</span>
                    </MenuItem>
                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/settings/two-up")'
                              RouterMatch="NavLinkMatch.All" RouterLink="/settings/two-up">
                        <span>2(or more)Up</span>
                    </MenuItem>
                </ChildContent>
            </SubMenu>
        </Menu>
    </Sider>
    <Layout>
        <Header Style="background: #fff">
            <div style="width: 100%; height: 100%; display: flex; justify-content: flex-end; align-items: center">
                <AuthorizeView>
                    <Authorized>
                        <UserIdWrapper Context="userId">
                            <RepositoryWrapper Context="response" TRepository="ITwoUpRequestRepository" Action="x => x.GetAllByRequesteeAsync(userId)" TResponse="IReadOnlyList<TwoUpRequest>">
                                <div style="margin: 0 1.75rem;">
                                    <a href="/notifications">
                                        <Badge Count="response.Count">
                                            <Icon Style="font-size: 150%" Type="notification"/>
                                        </Badge>
                                    </a>
                                </div>
                            </RepositoryWrapper>
                        </UserIdWrapper>
                        <Dropdown Placement="@PlacementType.BottomLeft">
                            <Overlay>
                                <Menu>
                                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/signout", true)'>
                                        Sign out
                                    </MenuItem>
                                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/switch-user", true)'>
                                        Switch user
                                    </MenuItem>
                                    <MenuDivider/>
                                    <MenuItem OnClick='() => _navigationManager.NavigateTo("/settings/up-access-token", true)'>
                                        Settings
                                    </MenuItem>
                                </Menu>
                            </Overlay>
                            <ChildContent>
                                <AntDesign.Button Icon="user">
                                    <span style="padding-left: 0.25rem">
                                        @(context.User.FindFirst(ClaimTypes.GivenName)?.Value ?? "User")
                                    </span>
                                </AntDesign.Button>
                            </ChildContent>
                        </Dropdown>
                    </Authorized>
                    <NotAuthorized>
                        <Button Type="primary" OnClick='() => _navigationManager.NavigateTo("/signin", true)'>Sign in</Button>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </Header>
        <Content Style="padding: 24px; margin: 0; min-height: 280px;">@ChildContent</Content>
        <Footer>
            <UpFooter/>
        </Footer>
    </Layout>
</Layout>

@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private bool _siderCollapsed;
}
