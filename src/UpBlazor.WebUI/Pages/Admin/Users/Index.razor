@page "/admin/users"
@using UpBlazor.WebUI.Services.Impersonation
@using Color = MudBlazor.Color
@layout AdminAuthorizeLayout

@inject UsersClient UsersClient
@inject ImpersonationService ImpersonationService

<MudText Typo="Typo.h3" Class="my-4">Users</MudText>

@if (_loading)
{
    <MudProgressLinear Indeterminate />
}
else if (_allUsers is null || !_allUsers.Any())
{
    <MudAlert Severity="Severity.Warning">No users found</MudAlert>
}
else
{
    @if (ImpersonationService.IsImpersonating)
    {
        <MudButton OnClick="() => ImpersonationService.Clear()" Style="margin-bottom: 1rem;">
            Clear Impersonation
        </MudButton>
    }

    <MoneyStatistic Amount="_allUsers.Count" Title="Total Users" HideDollarSymbol AmountFormatter="G"/>
    
    <MudDataGrid Class="mt-4" Items="_allUsers">
        <Columns>
            <Column T="RegisteredUserDto" Field="@nameof(RegisteredUserDto.Id)" />
            <Column T="RegisteredUserDto" Field="@nameof(RegisteredUserDto.Email)" />
            <Column T="RegisteredUserDto" Field="@nameof(RegisteredUserDto.GivenName)" />
            <Column T="RegisteredUserDto" Field="@nameof(RegisteredUserDto.Token)">
                <CellTemplate>
                    @switch (context.Item.Token)
                    {
                        case TokenType.NotSet:
                            <MudChip>None</MudChip>
                            break;
                        case TokenType.Demo:
                            <MudChip Color="Color.Warning">Demo</MudChip>
                            break;
                        case TokenType.Real:
                            <MudChip Color="Color.Success">Real</MudChip>
                            break;
                    }
                </CellTemplate>
            </Column>
            <Column T="RegisteredUserDto" Field="@nameof(RegisteredUserDto.CreatedAt)" />
            <Column T="RegisteredUserDto" Field="@nameof(RegisteredUserDto.UpdatedAt)" />
            <Column T="RegisteredUserDto">
                <CellTemplate>
                    <MudButton OnClick="() => ImpersonationService.ActorUserId = context.Item.Id">
                        Impersonate
                    </MudButton>
                </CellTemplate>
            </Column>
        </Columns>
    </MudDataGrid>
}

@code
{
    private bool _loading;
    private IReadOnlyList<RegisteredUserDto> _allUsers;

    protected override async Task OnInitializedAsync() => await ReloadAsync();

    private async Task ReloadAsync()
    {
        _loading = true;

        _allUsers = await UsersClient.GetAllAsync();
        
        _loading = false;
    }
}
