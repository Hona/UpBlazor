@using UpBlazor.Application.Features.Incomes
@inject IMediator _mediator

@if (_loading)
{
    <Spin />
}
else
{
    <Select DataSource="_incomes"
            @bind-Value="BoundContainer"
            Placeholder="Select an income...">
    </Select>
}

@code
{
    [Parameter]
    public Income SelectedIncome { get; set; }

    [Parameter]
    public EventCallback<Income> SelectedIncomeChanged { get; set; }

    [Parameter]
    public bool SelectFirst { get; set; } = true;
    
    private IReadOnlyList<Income> _incomes;

    private bool _loading;

    private Income BoundContainer
    {
        get => SelectedIncome;
        set => SelectedIncomeChanged.InvokeAsync(value);
    }

    protected override async Task OnInitializedAsync()
    {
        _loading = true;

        _incomes = await _mediator.Send(new GetIncomesQuery());
        
        if (SelectFirst)
        {
            BoundContainer = _incomes.FirstOrDefault();
        }
        
        _loading = false;
    }
}