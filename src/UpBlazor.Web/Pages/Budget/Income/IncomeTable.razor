@using UpBlazor.Application.Features.Incomes
@inject IMediator _mediator

@if (_loading)
{
    <Spin />
}
else
{
    <Title Level="3">Income</Title>
    
    <Table DataSource="_incomes">
        <Column Title="Name" @bind-Field="@context.Name" Sortable/>
        <Column Title="Amount" @bind-Field="context.ExactMoney" Format="$0.00" Sortable/>
        <Column Title="Start Date" @bind-Field="@context.StartDate" Format="dd/MM/yyyy" Sortable/>
        <Column Title="Interval Units" @bind-Field="@context.IntervalUnits" Sortable/>
        <Column Title="Interval" @bind-Field="@context.Interval" Sortable/>
        <ActionColumn>
            <Space>
                <SpaceItem>
                    <Button Danger OnClick="async () => await DeleteAsync(context)">Remove</Button>
                </SpaceItem>
            </Space>
        </ActionColumn>
    </Table>
}

@code
{
    private bool _loading;

    private IReadOnlyList<Income> _incomes;

    protected override async Task OnInitializedAsync() => await ReloadAsync();

    internal async Task ReloadAsync()
    {
        _loading = true;

        _incomes = await _mediator.Send(new GetIncomesQuery());
        
        _loading = false;
    }

    private async Task DeleteAsync(Income income)
    {
        _loading = true;

        await _mediator.Send(new DeleteIncomeCommand(income));
        
        _loading = false;

        await ReloadAsync();
    }
}