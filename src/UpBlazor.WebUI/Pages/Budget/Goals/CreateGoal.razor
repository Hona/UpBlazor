@using UpBlazor.Core.Models.Enums
@using System.Text.RegularExpressions
@using UpBlazor.Application.Features.Goals
@using UpBlazor.Core

@inject IMediator _mediator

<Card Title="New Goal">
        <Form Model="_request"
              LabelColSpan="4"
              WrapperColSpan="20"
              OnFinish="async () => await OnFormFinishAsync()"
              Loading="_loading">
            <FormItem Label="Name">
                <Input DebounceMilliseconds="int.MaxValue" @bind-Value="@context.Name"/>
            </FormItem>
            <FormItem Label="Amount">
                <AntDesign.InputNumber Style="min-width: 9rem" TValue="decimal" Formatter="MoneyFormat" Parser="MoneyParse" @bind-Value="@context.Amount" DefaultValue="50M" Min="0" Step="0.01M"/>
            </FormItem>
            <FormItem Label="Saver">
                <SaverSelector SelectedSaverChanged="x => _request.SaverId = x.Id"/>
            </FormItem>
            <FormItem Label="Date">
                <DatePicker @bind-Value="@context.Date" DefaultValue="DateTime.Now"/>
            </FormItem>
            <FormItem WrapperColOffset="4" WrapperColSpan="20">
                <Button Type="primary" HtmlType="submit">
                    Submit
                </Button>
            </FormItem>
        </Form>
</Card>

@code
{
    [Parameter]
    public EventCallback OnNewGoal { get; set; }
    
    private GoalRequest _request = new();

    private bool _loading;
    
    private async Task OnFormFinishAsync()
    {
        _loading = true;

        await _mediator.Send(new CreateGoalCommand(_request.Name, _request.Date, _request.Amount, _request.SaverId));

        _request = new GoalRequest();
        _loading = false;

        if (OnNewGoal.HasDelegate)
        {
            await OnNewGoal.InvokeAsync();
        }
    }

    private string MoneyFormat(decimal value) => $"${value:N2}";

    private string MoneyParse(string value) => Regex.Replace(value, @"\$\s?|(,*)", "");

    private class GoalRequest
    {
        [Required]
        public string Name { get; set; }
        [Required]
        public DateTime Date { get; set; }
        [Required]
        public decimal Amount { get; set; }
        [Required]
        public string SaverId { get; set; }
    }
}
